name: Advanced Bug Bounty Scanner

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
  schedule:
    - cron: '13 1 * * *'  # 5x daily scans
    - cron: '47 5 * * *'
    - cron: '29 9 * * *'
    - cron: '53 14 * * *'
    - cron: '11 18 * * *'

jobs:
  vulnerability-scan:
    runs-on: ubuntu-latest
    timeout-minutes: 120  # Prevent long-running jobs

    steps:
      # Existing working steps (unchanged)
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install scanning dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git python3 python3-pip nikto nmap unzip wget golang jq
          
          # Install recon tools
          go install github.com/tomnomnom/assetfinder@latest
          go install github.com/projectdiscovery/nuclei/v3/cmd/nuclei@latest
          go install github.com/projectdiscovery/httpx/cmd/httpx@latest
          sudo mv ~/go/bin/{assetfinder,nuclei,httpx} /usr/local/bin/
          
          # Install Amass (existing working version)
          wget https://github.com/owasp-amass/amass/releases/download/v4.2.0/amass_linux_amd64.zip
          unzip amass_linux_amd64.zip
          sudo mv amass_Linux_amd64/amass /usr/local/bin/
          
          # Update vulnerability databases
          nuclei -update-templates
          nikto -update

      # Existing domain verification
      - name: Verify domains file exists
        run: |
          if [ ! -f ".github/workflows/domains.txt" ]; then
            echo "ERROR: domains.txt file not found!"
            exit 1
          fi
          echo "Target domains:"
          cat .github/workflows/domains.txt

      # Enhanced subdomain detection
      - name: Detect subdomains
        id: subdomain-detection
        run: |
          set -e
          mkdir -p subdomain_output old_subdomains
          new_subdomains_detected=false
          
          while IFS= read -r domain; do
            domain=$(echo "$domain" | tr -d '\r\n')
            echo "üõ†Ô∏è Processing $domain"
            output_file="subdomain_output/${domain//\//_}_subdomains.txt"
            
            # Triple-threat discovery
            assetfinder --subs-only $domain | httpx -silent > "$output_file"
            amass enum -passive -d "$domain" >> "$output_file"
            
            # Clean and deduplicate
            sort -u "$output_file" -o "$output_file"
            sed -i '/^$/d' "$output_file"
            
            if [ -s "$output_file" ]; then
              echo "‚úÖ Found $(wc -l < "$output_file") subdomains"
              
              if [ -f "old_subdomains/${domain//\//_}_old_subdomains.txt" ]; then
                if ! diff -q "$output_file" "old_subdomains/${domain//\//_}_old_subdomains.txt"; then
                  new_subdomains_detected=true
                  echo "üî• New subdomains found!"
                fi
              else
                new_subdomains_detected=true
                echo "üåü First run - all subdomains are new"
              fi
              
              cp "$output_file" "old_subdomains/${domain//\//_}_old_subdomains.txt"
            else
              echo "‚ùå No subdomains found"
              touch "old_subdomains/${domain//\//_}_old_subdomains.txt"
            fi
          done < .github/workflows/domains.txt
          
          echo "new_subdomains_detected=$new_subdomains_detected" >> $GITHUB_ENV

      # Existing ZAP scan (unchanged)
      - name: ZAP Scan
        uses: zaproxy/action-af@v0.2.0
        with:
          plan: '.github/workflows/zap/plan.yml'
        if: env.new_subdomains_detected == 'true'

      # Enhanced Nikto scan with screenshots
      - name: Run Nikto Scan
        if: env.new_subdomains_detected == 'true'
        run: |
          mkdir -p nikto-reports
          while IFS= read -r domain; do
            domain=$(echo "$domain" | tr -d '\r\n')
            echo "üîç Nikto scanning $domain"
            nikto -h "https://$domain" -Format htm -output "nikto-reports/nikto-${domain//\//_}.html"
          done < .github/workflows/domains.txt

      # New Nuclei scan for critical vulnerabilities
      - name: Run Nuclei Scan
        if: env.new_subdomains_detected == 'true'
        run: |
          mkdir -p nuclei-reports
          while IFS= read -r domain; do
            domain=$(echo "$domain" | tr -d '\r\n')
            echo "üí£ Nuclei scanning $domain"
            nuclei -u "https://$domain" -severity critical,high -j -o "nuclei-reports/nuclei-${domain//\//_}.json"
          done < .github/workflows/domains.txt

      # Enhanced artifact uploads
      - name: Upload Reports
        uses: actions/upload-artifact@v4
        with:
          name: security-reports-${{ github.run_id }}
          path: |
            nikto-reports/*.html
            nuclei-reports/*.json
        if: env.new_subdomains_detected == 'true'

      # Smart notifications
      - name: Notify Slack
        if: always()
        run: |
          # Critical findings check
          if [ -d "nuclei-reports" ] && grep -q '"severity":"critical"' nuclei-reports/*.json; then
            SEVERITY="üö® CRITICAL"
          elif [ -d "nuclei-reports" ] && grep -q '"severity":"high"' nuclei-reports/*.json; then
            SEVERITY="‚ö†Ô∏è HIGH"
          else
            SEVERITY="‚ÑπÔ∏è INFO"
          fi
          
          curl -X POST -H 'Content-type: application/json' \
            --data "{
              \"text\":\"$SEVERITY: Scan completed for ${{ github.repository }}\",
              \"attachments\":[{
                \"color\":\"#36a64f\",
                \"fields\":[{
                  \"title\":\"View Results\",
                  \"value\":\"<https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|GitHub Actions>\",
                  \"short\":true
                }]
              }]
            }" \
            ${{ secrets.Slack_Hook }}
