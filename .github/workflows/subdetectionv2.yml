name: Vulnerability Scanning & Change Monitoring

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:  # Manual trigger
  schedule:
    - cron: '0 0 * * *'  # Run every day at midnight UTC

jobs:
  monitor-changes:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Install Subfinder from the precompiled binary
      - name: Install Subfinder
        run: |
          wget https://github.com/projectdiscovery/subfinder/releases/latest/download/subfinder-linux-amd64.zip
          unzip subfinder-linux-amd64.zip -d /usr/local/bin/
          chmod +x /usr/local/bin/subfinder
          rm subfinder-linux-amd64.zip  # Clean up the downloaded zip file

      - name: Find subdomains
        run: |
          subfinder -d mtn.com -silent > subdomains.txt

      # Download old_subdomains.txt if it exists
      - name: Download Old Subdomains
        uses: actions/download-artifact@v4
        with:
          name: old_subdomains
          path: ./ # Download to the current directory

      # Check for new subdomains by comparing with the last run
      - name: Compare Subdomains
        id: compare_subdomains
        run: |
          if [ -f old_subdomains.txt ]; then
            if ! diff subdomains.txt old_subdomains.txt; then
              echo "New subdomains detected"
              echo "::set-output name=changed::true"
            else
              echo "No new subdomains detected"
              echo "::set-output name=changed::false"
            fi
          else
            echo "First run, no old subdomains to compare."
            echo "::set-output name=changed::true"  # Treat first run as change detected
          fi
          cp subdomains.txt old_subdomains.txt  # Save current subdomains for the next run

      # Upload current subdomains for the next run
      - name: Upload Current Subdomains
        uses: actions/upload-artifact@v4
        with:
          name: old_subdomains
          path: old_subdomains.txt

      # Run OWASP ZAP & Nikto if changes detected
      - name: Run OWASP ZAP Scan
        if: steps.compare_subdomains.outputs.changed == 'true'  # Run ZAP only if new subdomains detected
        uses: zaproxy/action-baseline@v0.10.0
        with:
          target: 'https://mtn.com'
          rules_file_name: '.github/zap/rules.tsv'
        continue-on-error: true

      - name: Upload ZAP report
        if: steps.compare_subdomains.outputs.changed == 'true'  # Only upload if ZAP was run
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: owasp-zap-report.html

      - name: Install Nikto
        run: sudo apt-get update && sudo apt-get install -y nikto

      - name: Run Nikto Scan
        if: steps.compare_subdomains.outputs.changed == 'true'  # Run Nikto only if new subdomains detected
        run: |
          mkdir -p nikto-output
          nikto -h https://mtn.com -output nikto-output/nikto_report.txt
        continue-on-error: true

      - name: Upload Nikto report
        if: steps.compare_subdomains.outputs.changed == 'true'  # Only upload if Nikto was run
        uses: actions/upload-artifact@v4
        with:
          name: nikto-report
          path: nikto-output/nikto_report.txt

      - name: Display Scan Summary
        run: |
          echo "OWASP ZAP and Nikto Scans Completed"
