name: Vulnerability Scanning & Subdomain Detection

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:  # Manual trigger
  schedule:
    - cron: '0 0 * * *'  # Run every day at midnight UTC

jobs:
  vulnerability-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Install Sublist3r
      - name: Install Sublist3r dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git python3 python3-pip
          git clone https://github.com/aboul3la/Sublist3r.git
          cd Sublist3r
          pip3 install -r requirements.txt

      # Use Sublist3r to detect subdomains for multiple domains
      - name: Detect subdomains
        run: |
          set -e
          mkdir -p subdomain_output old_subdomains
          new_subdomains_detected=false

          # Create a file `domains.txt` with your list of domains
          while IFS= read -r domain; do
            echo "Finding subdomains for $domain"
            python3 Sublist3r/sublist3r.py -d $domain -o "subdomain_output/${domain}_subdomains.txt"
            
            # Check if new subdomains are detected
            if [ -f "old_subdomains/${domain}_old_subdomains.txt" ]; then
              if ! diff "subdomain_output/${domain}_subdomains.txt" "old_subdomains/${domain}_old_subdomains.txt"; then
                echo "New subdomains detected for $domain"
                new_subdomains_detected=true
              fi
            else
              echo "First run for $domain, no old subdomains to compare."
              new_subdomains_detected=true
            fi
            
            # Save current subdomains for the next run
            cp "subdomain_output/${domain}_subdomains.txt" "old_subdomains/${domain}_old_subdomains.txt"
          done < domains.txt

          # Set output variable for new subdomains detection
          echo "new_subdomains_detected=${new_subdomains_detected}" >> $GITHUB_ENV

      # Run OWASP ZAP Scan for multiple domains if new subdomains were detected
      - name: Run OWASP ZAP Scan
        if: env.new_subdomains_detected == 'true'  # Run ZAP only if new subdomains detected
        run: |
          echo "Running OWASP ZAP for subdomains"
          while IFS= read -r domain; do
            while IFS= read -r subdomain; do
              echo "Scanning subdomain: $subdomain"
              zaproxy/action-baseline@v0.10.0 --target "https://$subdomain" --rules-file .github/zap/rules.tsv
              # ^^^ Replace the target domain with the detected subdomain here
            done < "subdomain_output/${domain}_subdomains.txt"
          done < domains.txt
        continue-on-error: true

      # Install Nikto
      - name: Install Nikto
        run: sudo apt-get update && sudo apt-get install -y nikto

      # Run Nikto Scan for multiple domains if new subdomains were detected
      - name: Run Nikto Scan
        if: env.new_subdomains_detected == 'true'  # Run Nikto only if new subdomains detected
        run: |
          mkdir -p nikto-output
          echo "Running Nikto for subdomains"
          while IFS= read -r domain; do
            while IFS= read -r subdomain; do
              echo "Scanning subdomain: $subdomain"
              nikto -h "https://$subdomain" -output "nikto-output/nikto_report_${subdomain}.txt"
              # ^^^ Replace the target domain with the detected subdomain here
            done < "subdomain_output/${domain}_subdomains.txt"
          done < domains.txt
        continue-on-error: true

      - name: Upload Nikto report
        if: env.new_subdomains_detected == 'true'  # Upload report only if new subdomains detected
        uses: actions/upload-artifact@v4
        with:
          name: nikto-report
          path: nikto-output/

      - name: Display Scan Summary
        run: |
          echo "OWASP ZAP and Nikto Scans Completed"
